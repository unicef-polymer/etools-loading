/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/tools/tree/master/packages/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   etools-loading-mixin.js
 */


// tslint:disable:variable-name Describing an API that's defined elsewhere.
// tslint:disable:no-any describes the API as best we are able today

import {PolymerElement} from "@polymer/polymer/polymer-element";

interface Constructor<T> {
  new(...args: any[]): T;
}

declare function internalLoadingMixin<T extends Constructor<PolymerElement>>(base: T): {
  new (...args: any[]): {
      connectedCallback(): void;

      /**
       * This method will create an etools-loading absolute element
       * (loading element is appended to the body and it will cover entire screen)
       */
      createLoading(loadingMessage: any): Element|null;

      /**
       * Use this method to remove a loading element in the detached state of the element where loading is used
       */
      removeLoading(loadingElement: any): void;
      addMessageToQue(messages: any, source: any): any;
      removeMessageFromQue(messages: any, source: any): any;

      /**
       * Show loading when data is requested from server, or save is in progress...
       */
      handleLoading(event: any): void;
      clearLoadingQueue(event: any): void;

  }
} & T & Constructor<PolymerElement>;


declare function LoadingMixin<T extends Constructor<PolymerElement>>(base: T): {
  new (...args: any[]): {

  }
}

export default LoadingMixin;
